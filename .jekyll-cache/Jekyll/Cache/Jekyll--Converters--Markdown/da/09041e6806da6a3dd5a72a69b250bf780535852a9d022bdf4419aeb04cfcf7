I":
<h2 id="1-flex-布局是什么">1. flex 布局是什么？</h2>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Flex 是 Flexible Box 的缩写，意为"弹性布局"，用来为盒状模型提供最大的灵活性。
任何一个容器都可以指定为 Flex 布局。

采用 Flex 布局的元素，称为 Flex 容器（flex container），简称"容器"。它的所有子元素自动成为容器成员，称为 Flex 项目（flex item），简称"项目"。
</code></pre></div></div>

<h2 id="2-flex-容器的属性">2. flex 容器的属性</h2>
<ul>
  <li>flex-direction</li>
  <li>flex-wrap</li>
  <li>flex-flow</li>
  <li>justify-content</li>
  <li>align-items</li>
  <li>align-content</li>
</ul>

<h3 id="21-flex-direction-属性">2.1 flex-direction 属性</h3>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>属性决定主轴的方向（即项目的排列方向）。

</code></pre></div></div>
<ul>
  <li>row（默认值）：主轴为水平方向，起点在左端。</li>
  <li>row-reverse：主轴为水平方向，起点在右端。</li>
  <li>column：主轴为垂直方向，起点在上沿。</li>
  <li>column-reverse：主轴为垂直方向，起点在下沿。</li>
</ul>

<h3 id="22-flex-wrap-属性">2.2 flex-wrap 属性</h3>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>默认情况下，项目都排在一条线（又称"轴线"）上。flex-wrap属性定义，如果一条轴线排不下，如何换行。
</code></pre></div></div>
<ul>
  <li>nowrap（默认）：不换行。</li>
  <li>wrap：换行，第一行在上方。</li>
  <li>wrap-reverse：换行，第一行在下方。</li>
</ul>

<h3 id="23-flex-flow-属性">2.3 flex-flow 属性</h3>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>flex-flow属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap。
</code></pre></div></div>
<pre><code class="language-CSS">flex-flow: &lt;flex-direction&gt; || &lt;flex-wrap&gt;;
</code></pre>
<h3 id="24-justify-content-属性">2.4 justify-content 属性</h3>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>justify-content 属性定义了项目在主轴上的对齐方式。
</code></pre></div></div>
<ul>
  <li>flex-start（默认值）：左对齐</li>
  <li>flex-end：右对齐</li>
  <li>center： 居中</li>
  <li>space-between：两端对齐，项目之间的间隔都相等。</li>
  <li>space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。</li>
</ul>

<h3 id="25-align-items-属性">2.5 align-items 属性</h3>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>align-items属性定义项目在交叉轴上如何对齐。
</code></pre></div></div>
<ul>
  <li>flex-start：交叉轴的起点对齐。</li>
  <li>flex-end：交叉轴的终点对齐。</li>
  <li>center：交叉轴的中点对齐。</li>
  <li>baseline: 项目的第一行文字的基线对齐。</li>
  <li>stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。</li>
</ul>

<h3 id="26-align-content-属性">2.6 align-content 属性</h3>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>align-content属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。
</code></pre></div></div>
<ul>
  <li>flex-start：与交叉轴的起点对齐。</li>
  <li>flex-end：与交叉轴的终点对齐。</li>
  <li>center：与交叉轴的中点对齐。</li>
  <li>space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。</li>
  <li>space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。</li>
  <li>stretch（默认值）：轴线占满整个交叉轴。</li>
</ul>

<h2 id="3-flex-项目的属性">3. flex 项目的属性</h2>

<h3 id="31-order">3.1 order</h3>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>order属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。
</code></pre></div></div>
<h3 id="32-flex-grow">3.2 flex-grow</h3>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>flex-grow属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。

如果所有项目的flex-grow属性都为1，则它们将等分剩余空间（如果有的话）。如果一个项目的flex-grow属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。
</code></pre></div></div>
<h3 id="33-flex-shrink">3.3 flex-shrink</h3>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>flex-shrink 属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。

如果所有项目的flex-shrink属性都为1，当空间不足时，都将等比例缩小。如果一个项目的flex-shrink属性为0，其他项目都为1，则空间不足时，前者不缩小。

负值对该属性无效。
</code></pre></div></div>
<h3 id="34-flex-basis">3.4 flex-basis</h3>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>flex-basis属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小。

它可以设为跟width或height属性一样的值（比如350px），则项目将占据固定空间。
</code></pre></div></div>
<h3 id="35-flex">3.5 flex</h3>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>flex属性是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选。

该属性有两个快捷值：auto (1 1 auto) 和 none (0 0 auto)。

建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。
</code></pre></div></div>
<h3 id="36-align-self">3.6 align-self</h3>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>align-self属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。

该属性可能取6个值，除了auto，其他都与align-items属性完全一致。
</code></pre></div></div>

<h2 id="例子-examplehtml"><strong>例子</strong>： <a href="./example.html">example.html</a></h2>

<h2 id="练习题-flex-终极练习题"><strong>练习题</strong> <a href="http://flexboxfroggy.com/">Flex 终极练习题</a></h2>

<p>参考：</p>
<blockquote>
  <p>1.http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html</p>
</blockquote>

<blockquote>
  <p>2.http://www.ruanyifeng.com/blog/2015/07/flex-examples.html</p>
</blockquote>

<blockquote>
  <p>3.http://static.vgee.cn/static/index.html</p>
</blockquote>

<blockquote>
  <p>4.https://codepen.io/LandonSchropp/pen/KpzzGo</p>
</blockquote>

<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">class</span><span class="nd">:nth-of-type</span><span class="o">(</span><span class="nt">Number</span><span class="o">)</span>
<span class="nt">p</span><span class="nd">:nth-of-type</span><span class="o">(</span><span class="nt">Number</span><span class="o">)</span>
<span class="err">为父元素的第</span> <span class="nt">Number</span> <span class="err">个</span>
</code></pre></div></div>
:ET